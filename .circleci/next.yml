version: 2.1

parameters:
  build-app1:
    type: boolean
    default: false
  build-app2:
    type: boolean
    default: false
  build-app3:
    type: boolean
    default: false
  trigger-all:
    type: boolean
    default: false

executors:
  base:
    docker:
      - image: cimg/base:stable
    resource_class: small

common-config: &common-config
  executor: base
  steps:
    - run:
        name: stop early unless relevant
        command: |
          # DEBUG
          printenv build-app1 || true
          printenv build-app2 || true
          printenv build-app3 || true
          printenv trigger-all || true

          # see https://circleci.com/docs/env-vars#built-in-environment-variables
          # CIRCLE_JOB returns the name of the job (e.g., "build-app1", "build-app2", etc)
          # so, TO_CONTINUE will evaluate and be set to the value of the env var that matches the current job's name
          export TO_CONTINUE=$(eval echo $$CIRCLE_JOB)
          printenv TO_CONTINUE

          if [ ! $TO_CONTINUE ] && [ ! $trigger-all ]; then
            # we stop the job early if:
            # $trigger-all is NOT TRUE or
            # env var based on job name says FALSE
            circleci-agent step halt
          fi
        environment:
          build-app1: << pipeline.parameters.build-app1 >>
          build-app2: << pipeline.parameters.build-app2 >>
          build-app3: << pipeline.parameters.build-app3 >>
          trigger-all: << pipeline.parameters.trigger-all >>                
    - checkout
    - run: |
        echo "test common"

jobs:

  tests-done:
    executor: base
    steps:
      - run: echo "DONE"

  build-app1:
    <<: *common-config
  build-app2:
    <<: *common-config   
  build-app3:
    <<: *common-config
    

workflows:
  just-this-one:
    jobs:
      - build-app1
      - build-app2
      - build-app3
      - tests-done:
          requires:
            - build-app1
            - build-app2
            - build-app3


